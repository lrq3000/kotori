include:
  remote: 'https://gitlab.com/gitlab-org/gitlab/-/raw/master/lib/gitlab/ci/templates/Android.gitlab-ci.yml'

variables:
  PACKAGE_NAME: "dev.melonpan.kotori_release_v${CI_COMMIT_TAG}.apk"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/kotori/${CI_COMMIT_TAG}"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .gradle/caches
    - .gradle/wrapper

assembleDebug:
  rules:
    - if: $CI_COMMIT_TAG == null

debugTests:
  rules:
    - if: $CI_COMMIT_TAG == null

assembleRelease:
  interruptible: true
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo $KEYSTORE_FILE | base64 -d > my.keystore
    - ./gradlew assembleRelease
        -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
        -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
        -Pandroid.injected.signing.key.alias=$KEY_ALIAS
        -Pandroid.injected.signing.key.password=$KEY_PASSWORD
  artifacts:
    paths:
      - app/build/outputs/apk/release/${PACKAGE_NAME}

upload:
  stage: deploy
  image: curlimages/curl:latest
  before_script: []
  cache: []
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file app/build/outputs/apk/release/${PACKAGE_NAME} ${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME}
  dependencies:
      - assembleRelease

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: deploy
  before_script: []
  cache: []
  rules:
    - if: $CI_COMMIT_TAG
  needs: ["upload"]
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${PACKAGE_NAME}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME}\"}"
